/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.persistence.EntityManager;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import POJOS.FavoriteList;
import POJOS.Movie;
import controller.ApiController;
import java.util.List;


/**
 *
 * @author rodius
 */
public class ListManager extends javax.swing.JFrame {
    /**
     * Creates new form ListManager
     */
    EntityManager em = ApiController.em;
    public ListManager() {
        initComponents();
        this.setLocationRelativeTo(null);
        EditButton.setEnabled(false);
        DeleteButton.setEnabled(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        favoriteListQuery = java.beans.Beans.isDesignTime() ? null : em  .createQuery("SELECT f FROM FavoriteList f");
        favoriteListList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(favoriteListQuery.getResultList());
        jPanel1 = new javax.swing.JPanel();
        CreateButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListOfLists = new javax.swing.JList<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        CreateButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CreateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/manager.create.png"))); // NOI18N
        CreateButton.setText("Δημιουργία");
        CreateButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0)));
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/manager.edit.png"))); // NOI18N
        EditButton.setText("επεξεργασία");
        EditButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0)));
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gui/manager.delete.png"))); // NOI18N
        DeleteButton.setText("Διαγραφή");
        DeleteButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0)));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        ListOfLists.setBackground(new java.awt.Color(153, 153, 153));
        ListOfLists.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0)), "Οι λίστες μου"));

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, favoriteListList, ListOfLists);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        bindingGroup.addBinding(jListBinding);

        ListOfLists.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListOfListsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListOfLists);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditButton)
                    .addComponent(CreateButton)
                    .addComponent(DeleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CreateButton, DeleteButton, EditButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(CreateButton)
                .addGap(18, 18, 18)
                .addComponent(EditButton)
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addGap(160, 160, 160))
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        int[] selectedValues = ListOfLists.getSelectedIndices();
        
        if(selectedValues.length == 0){
            return;
        }
        
        for(int i : selectedValues){
            deleteFavoriteList(i);      
        }
        
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        String listName = JOptionPane.showInputDialog("Δώσε το όνομα της λίστας:" );
        if(listName == null){
            return;
        }

        em.getTransaction().begin(); //ξεκινάω μια καινούργια συναλλαγή

        POJOS.FavoriteList newList = new POJOS.FavoriteList();
        newList.setName(listName);    

        em.persist(newList);
        em.flush();
        em.getTransaction().commit(); //Αποθήκευση στη βάση των αλλαγών

        System.out.println("New List successfully created: " + listName);
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        int i = ListOfLists.getSelectedIndex();
        if(i == -1){
            return;
        }
        String name = ListOfLists.getSelectedValue();
        System.out.println(name);
        
        Object[] options = {"Αποθήκευση", "Ακύρωση"};

        JPanel panel = new JPanel();
        panel.add(new JLabel("Δώσε το όνομα της λίστας:"));
        JTextField textField = new JTextField(10);
        textField.setText(name);
        panel.add(textField);

        int result = JOptionPane.showOptionDialog(null, panel, "",
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, null);
        if(result != 0){
            return;
        }
        
        String newName = textField.getText();
        if(newName == null){
            return;
        }
        
        em.getTransaction().begin();
        FavoriteList fl = em
                .createNamedQuery("FavoriteList.findByName", FavoriteList.class)
                .setParameter("name", name)
                .getSingleResult();
        if(fl == null){
            System.out.println("Not Found list");
            return;
        }
        FavoriteList editedFl = em.find(FavoriteList.class, fl.getId());
        editedFl.setName(newName);
        em.merge(editedFl);

        em.getTransaction().commit(); //Αποθήκευση στη βάση των αλλαγών
        System.out.println("List successfully updated to " + newName);
    }//GEN-LAST:event_EditButtonActionPerformed

    private void ListOfListsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListOfListsMouseClicked
        // TODO add your handling code here:
        setButtonsStatus();
    }//GEN-LAST:event_ListOfListsMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        updateListData();
        setButtonsStatus();
    }//GEN-LAST:event_formWindowGainedFocus
    
    public void updateListData(){
        em.getTransaction().begin();
        favoriteListList = em
                    .createNamedQuery("FavoriteList.findAll", FavoriteList.class)
                    .getResultList();
        em.getTransaction().commit();
        
        String[] arr = new String[favoriteListList.size()];

        for(int i = 0; i < favoriteListList.size(); i++){
            arr[i] = favoriteListList.get(i).getName();
        }
        ListOfLists.setListData(arr);
    }
    
    public void deleteFavoriteList(int i){
        String name = ListOfLists.getModel().getElementAt(i);
        int result = JOptionPane.showOptionDialog(null, "Διαγραφή της λίστας " + name, "Confirm",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                    new String[]{"Οκ", "Ακύρωση"}, "Οκ");

        // Έλεγχος για την απάντηση επιβεβαίωσης
        if(result != 0){
            return;
        }
        
        em.getTransaction().begin();
        FavoriteList fl = em
                .createNamedQuery("FavoriteList.findByName", FavoriteList.class)
                .setParameter("name", name)
                .getSingleResult();
        
        if(fl == null){
            return;
        }
        
        // Αφαίρεση ταινιών από τη λίστα
        em.createQuery("Update Movie m SET m.favoriteListId = null where m.favoriteListId = :fl ")
          .setParameter("fl", fl)
          .executeUpdate();
        
        em.remove(fl);
        em.flush();
        em.getTransaction().commit();
        System.out.println("List successfully deleted:" + name);
    }
    
    public void setButtonsStatus(){
        int i = ListOfLists.getSelectedIndex();
        if(i == -1){
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            return;
        }
        EditButton.setEnabled(true);
        DeleteButton.setEnabled(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JList<String> ListOfLists;
    private java.util.List<POJOS.FavoriteList> favoriteListList;
    private javax.persistence.Query favoriteListQuery;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
